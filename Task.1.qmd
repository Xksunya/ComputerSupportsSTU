---
title: "Task 1"
author: "Kseniia Vii"
date: "11/12/2024"
format: html
editor: visual
---

# Quarto

## Create variables of each atomic type in R

Character type (string)

```{r}
char_var <- "This is a character string"
char_var
```

Numeric type (decimal number)

```{r}
num_var <- 3.14
num_var
```

Integer type (whole number, explicitly marked using 'L')

```{r}
int_var <- 42L
int_var
```

Complex type (real + imaginary number)

```{r}
complex_var <- 2 + 3i
complex_var
```

Logical type (TRUE or FALSE)

```{r}
logical_var <- TRUE
logical_var
```

Print the variables to check their values

```{r}
cat("Character:", char_var, "\n")
cat("Numeric:", num_var, "\n")
cat("Integer:", int_var, "\n")
cat("Complex:", complex_var, "\n")
cat("Logical:", logical_var, "\n")
```

## Create vectors

Sequence from 5 to 75

```{r}
seq_vector <- 5:75
cat("Sequence from 5 to 75:\n", seq_vector, "\n\n")
```

Vector with numbers 3.14, 2.71, 0, 13

```{r}
num_vector <- c(3.14, 2.71, 0, 13)
cat("Numbers 3.14, 2.71, 0, 13:\n", num_vector, "\n\n")
```

Vector with 100 TRUE values

```{r}
logical_vector <- rep(TRUE, 100)
cat("100 TRUE values:\n", logical_vector, "\n")
```

## Create the matrix

```{r}
my_matrix <- matrix(c(12, 34, 87, -12, -12.1, 0, 3.6, 0.5, 1.3), nrow = 3, byrow = TRUE)
# Print the matrix
print(my_matrix)
```

## Create a list with all atomic types

```{r}
atomic_types <- list(
  numeric = c(1.5, 2.3),
  integer = c(1L, 2L),
  character = c("a", "b"),
  logical = c(TRUE, FALSE),
  complex = c(1 + 2i, 3 + 4i)
)
#print(atomic_types)
```

## Create a factor with 3 levels

```{r}
age_groups <- factor(c("infant", "child", "adult"), levels = c("infant", "child", "adult"))
# Print the factor
print(age_groups)
```

## Create a data frame

```{r}
my_data_frame <- data.frame(
  Name = c("Alice", "Bob", "Charlie"),
  Age = c(5, 10, 30),
  Occupation = c("Student", "Student", "Engineer")
)
# Print the data frame
print(my_data_frame)
```

```{r}
# Change column names of the data frame
colnames(my_data_frame) <- c("Person_Name", "Person_Age", "Job_Title")
# Print the updated data frame
print(my_data_frame)
```
